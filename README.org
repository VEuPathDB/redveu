#+title: RedVEu (Redmine for VEuPath in Emacs)
#+author: John Brestelli

* Getting started

** Requirements

=redveu= depends on the following emacs lisp packages, which are
available from MELPA.  Install these packages as well.
- [[https://github.com/leoc/elmine][elmine]] --- Redmine API access
- [[https://github.com/magnars/s.el][s.el]] --- The long lost Emacs string manipulation library.


Confrimed working on:
- Ubuntu 18.04.4 with GNU Emacs 25.2.2 (x86_64-pc-linux-gnu, GTK+ Version 3.22.21) of 2017-09-22, modified by Debian
- Mac OS Mojave 10.14.6 with Emacs 26.1 (9.0)

** Download  to a directory in `load-path'.
   #+begin_example
   git clone https://github.com/leoc/elmine.git
   git clone https://github.com/magnars/s.el
   git clone https://github.com/VEuPathDB/redveu.git
   #+end_example

** Edit your ~/.emacs

#+begin_src emacs-lisp
  ;; Change these as appropriate
  (add-to-list 'load-path "~/redmine/elmine")
  (add-to-list 'load-path "~/redmine/s.el")
  (add-to-list 'load-path "~/redmine/redveu")

  (load "redveu")
  (setq elmine/host "https://redmine.apidb.org")
  (setq elmine/api-key "YOUR_API_KEY")
#+end_src

** Basics
   1. Everything is run in "org-mode".  Open a file with the extension ".org" or turn on the mode manually.
   2. Project and issue queries must (for now) be created and saved using redmine's web interface
   3. Changes you make to the text in the org file will not be reflected in redmine.  To update tasks, you must run update commands
   4. You can search for issues using a pre defined query
      #+begin_src emacs-lisp
      redveu/get-issues query_name
      redveu/get-issues-by-id query_id
      #+end_src
   5. Search for projects using a pre defined query
      #+begin_src emacs-lisp
      redveu/get-projects query_id
      #+end_src
   6. When cursor is on a project, get all project-issues using a pre defined query
      #+begin_src emacs-lisp
      redveu/get-project-issues query_id
      #+end_src
   7. Link to create new issue for a project
   8. Link to issue web page
   9. Link to create subtask of an issue
   10. Link to attachments
   11. when cursor is on an issue, update issues using api (PUT)
       #+begin_src emacs-lisp
       redveu/update-assigned-to
       redveu/update-status
       redveu/update-version
       redveu/update-tracker
       redveu/update-priority
       redveu/update-subject
       redveu/update-veupathdb-team
       redveu/add-comment
       #+end_src
       - uses tab complete
       - fetches and caches available options (on first call)
       - add a comment/note or change subject
   12. when cursor is on a search, group the issues by property
       #+begin_src emacs-lisp
       redveu/group-issues
       redveu/refresh-query
       #+end_src

* TODOs
   1. Add new issue using API.  This is supported in elmine
   2. Check for "Choose" Tracker as this will cause problems with updates to status
      - You cannot set any status you like.  Each tracker has supported status options
      - Choose is especially bad may apply to others as well

